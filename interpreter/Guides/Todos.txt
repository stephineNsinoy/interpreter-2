TODOS:
    GOODS   1.) Make a function that will check if the declared variable is comaptible with the data type

    GOODS   2.) Complete the Display function
                  GOODS - Can recognize '$' as newline

    GOODS   3.) Make a Scan function

    GOODS   4.) implement the expressions operators
                  GOODS -  Additive 
                  GOODS -  Comparative
                  GOODS -  Multiplicative 
                  GOODS -  With Parenthesis 
                  GOODS -  Logical
                  GOODS -  Unary
                  GOODS -  Concat

    GOODS   5.) Test if begin and end code cannot be placed anywhere
                  GOODS - Error handler if there is a BEGIN CODE inside or outside
                  GOODS - Error handler if there are statements after END CODE

    GOODS   6.) INT y,x --- apply logic that will accept this declaration

    GOODS   7.) Assignment still not supports x=y=5

    GOODS   8.) Handle error for declaring more than one character inside single quote ex. 'dada'

    GOODS   9.) Cannot read boolean values because it will be stored as a string

    GOODS   10.) Error handler when assigning values to a variable not conforming to data type

    GOODS   11.) Implement the escape code []

    GOODS   12.) Update Code.g4 for BEGIN CODE and END CODE put it in line block

    GOODS   13.) Check if there is a declaration in the line*
                       - if line contains (INT, FLOAT, BOOL, CHAR) in line handle error

    GOODS   14.) CHECK THE EVALUATOR CLASS -- CHECK LISTED TODOS IN COMMENTS

    GOODS   15.) IF ELSE ELSEIF statement implementation

    GOODS   16.) WHILE statement implementation

    GOODS   17.) Make an error handler for not declaring variables after begin code

    GOODS   18.) x=z=-4=4 -> Handle this error

    GOODS   19.) 1 statement per line only
