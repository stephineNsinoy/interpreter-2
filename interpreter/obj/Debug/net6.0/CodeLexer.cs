//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\USER\Documents\programming languages\interpreter-2\interpreter\Grammar\Code.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace interpreter.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class CodeLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, BEGIN_CODE=24, 
		END_CODE=25, INT=26, FLOAT=27, CHAR=28, BOOL=29, INTEGER_VAL=30, FLOAT_VAL=31, 
		STRING_VAL=32, CHARACTER_VAL=33, BOOL_VAL=34, IDENTIFIER=35, COMMENT=36, 
		SEMI_COLON=37, BLANK_LINE=38, WS=39, BEGIN_IF=40, END_IF=41, WHILE=42, 
		BEGIN_WHILE=43, END_WHILE=44, FUNCTIONS=45, SCAN=46, LOGICAL_OPERATOR=47;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "BEGIN_CODE", "END_CODE", 
		"INT", "FLOAT", "CHAR", "BOOL", "INTEGER_VAL", "FLOAT_VAL", "STRING_VAL", 
		"CHARACTER_VAL", "BOOL_VAL", "IDENTIFIER", "COMMENT", "SEMI_COLON", "BLANK_LINE", 
		"WS", "BEGIN_IF", "END_IF", "WHILE", "BEGIN_WHILE", "END_WHILE", "FUNCTIONS", 
		"SCAN", "LOGICAL_OPERATOR"
	};


	public CodeLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "','", "'='", "'IF'", "'('", "')'", "'ELSE'", "':'", "'NOT'", 
		"'*'", "'/'", "'%'", "'+'", "'-'", "'&'", "'=='", "'<>'", "'>'", "'<'", 
		"'>='", "'<='", "'['", "']'", "'BEGIN CODE'", "'END CODE'", "'INT'", "'FLOAT'", 
		"'CHAR'", "'BOOL'", null, null, null, null, null, null, null, "'?'", null, 
		null, "'BEGIN IF'", "'END IF'", "'WHILE'", "'BEGIN WHILE'", "'END WHILE'", 
		null, "'SCAN:'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"BEGIN_CODE", "END_CODE", "INT", "FLOAT", "CHAR", "BOOL", "INTEGER_VAL", 
		"FLOAT_VAL", "STRING_VAL", "CHARACTER_VAL", "BOOL_VAL", "IDENTIFIER", 
		"COMMENT", "SEMI_COLON", "BLANK_LINE", "WS", "BEGIN_IF", "END_IF", "WHILE", 
		"BEGIN_WHILE", "END_WHILE", "FUNCTIONS", "SCAN", "LOGICAL_OPERATOR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Code.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x31\x165\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x3\x2\x3\x2\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3"+
		"\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3"+
		"\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x6\x1F\xC3\n\x1F"+
		"\r\x1F\xE\x1F\xC4\x3 \x6 \xC8\n \r \xE \xC9\x3 \x3 \x6 \xCE\n \r \xE "+
		"\xCF\x3!\x3!\a!\xD4\n!\f!\xE!\xD7\v!\x3!\x3!\x3!\a!\xDC\n!\f!\xE!\xDF"+
		"\v!\x3!\x5!\xE2\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x5\"\xF1\n\"\x3#\x3#\x3#\x3#\x3$\x3$\a$\xF9\n$\f$\xE$\xFC"+
		"\v$\x3%\x3%\a%\x100\n%\f%\xE%\x103\v%\x3%\x3%\x3&\x3&\x3\'\a\'\x10A\n"+
		"\'\f\'\xE\'\x10D\v\'\x3\'\x5\'\x110\n\'\x3\'\x3\'\x3(\x6(\x115\n(\r(\xE"+
		"(\x116\x3(\x3(\x3)\x3)\x3)\x3)\x3)\x3)\x3)\x3)\x3)\x3*\x3*\x3*\x3*\x3"+
		"*\x3*\x3*\x3+\x3+\x3+\x3+\x3+\x3+\x3,\x3,\x3,\x3,\x3,\x3,\x3,\x3,\x3,"+
		"\x3,\x3,\x3,\x3-\x3-\x3-\x3-\x3-\x3-\x3-\x3-\x3-\x3-\x3.\x3.\x3.\x3.\x3"+
		".\x3.\x3.\x3.\x3.\x3.\x3.\x3.\x3.\x5.\x154\n.\x3/\x3/\x3/\x3/\x3/\x3/"+
		"\x3\x30\x3\x30\x3\x30\x3\x30\x3\x30\x3\x30\x3\x30\x3\x30\x5\x30\x164\n"+
		"\x30\x2\x2\x2\x31\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x3\x2\r\x3\x2\x32;\x3\x2$$\x3\x2"+
		"))\x5\x2\f\f\xF\xF))\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61"+
		"\x63|\x4\x2\f\f\xF\xF\x4\x2\v\v\"\"\x3\x2\xF\xF\x3\x2\f\f\x5\x2\v\v\xF"+
		"\xF\"\"\x173\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t"+
		"\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11"+
		"\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2"+
		"\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2"+
		"\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2"+
		"\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31"+
		"\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2"+
		"\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2"+
		"\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2"+
		"\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3"+
		"\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2"+
		"\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x3\x61\x3\x2\x2\x2"+
		"\x5\x63\x3\x2\x2\x2\a\x65\x3\x2\x2\x2\tg\x3\x2\x2\x2\vj\x3\x2\x2\x2\r"+
		"l\x3\x2\x2\x2\xFn\x3\x2\x2\x2\x11s\x3\x2\x2\x2\x13u\x3\x2\x2\x2\x15y\x3"+
		"\x2\x2\x2\x17{\x3\x2\x2\x2\x19}\x3\x2\x2\x2\x1B\x7F\x3\x2\x2\x2\x1D\x81"+
		"\x3\x2\x2\x2\x1F\x83\x3\x2\x2\x2!\x85\x3\x2\x2\x2#\x88\x3\x2\x2\x2%\x8B"+
		"\x3\x2\x2\x2\'\x8D\x3\x2\x2\x2)\x8F\x3\x2\x2\x2+\x92\x3\x2\x2\x2-\x95"+
		"\x3\x2\x2\x2/\x97\x3\x2\x2\x2\x31\x99\x3\x2\x2\x2\x33\xA4\x3\x2\x2\x2"+
		"\x35\xAD\x3\x2\x2\x2\x37\xB1\x3\x2\x2\x2\x39\xB7\x3\x2\x2\x2;\xBC\x3\x2"+
		"\x2\x2=\xC2\x3\x2\x2\x2?\xC7\x3\x2\x2\x2\x41\xE1\x3\x2\x2\x2\x43\xF0\x3"+
		"\x2\x2\x2\x45\xF2\x3\x2\x2\x2G\xF6\x3\x2\x2\x2I\xFD\x3\x2\x2\x2K\x106"+
		"\x3\x2\x2\x2M\x10B\x3\x2\x2\x2O\x114\x3\x2\x2\x2Q\x11A\x3\x2\x2\x2S\x123"+
		"\x3\x2\x2\x2U\x12A\x3\x2\x2\x2W\x130\x3\x2\x2\x2Y\x13C\x3\x2\x2\x2[\x153"+
		"\x3\x2\x2\x2]\x155\x3\x2\x2\x2_\x163\x3\x2\x2\x2\x61\x62\a=\x2\x2\x62"+
		"\x4\x3\x2\x2\x2\x63\x64\a.\x2\x2\x64\x6\x3\x2\x2\x2\x65\x66\a?\x2\x2\x66"+
		"\b\x3\x2\x2\x2gh\aK\x2\x2hi\aH\x2\x2i\n\x3\x2\x2\x2jk\a*\x2\x2k\f\x3\x2"+
		"\x2\x2lm\a+\x2\x2m\xE\x3\x2\x2\x2no\aG\x2\x2op\aN\x2\x2pq\aU\x2\x2qr\a"+
		"G\x2\x2r\x10\x3\x2\x2\x2st\a<\x2\x2t\x12\x3\x2\x2\x2uv\aP\x2\x2vw\aQ\x2"+
		"\x2wx\aV\x2\x2x\x14\x3\x2\x2\x2yz\a,\x2\x2z\x16\x3\x2\x2\x2{|\a\x31\x2"+
		"\x2|\x18\x3\x2\x2\x2}~\a\'\x2\x2~\x1A\x3\x2\x2\x2\x7F\x80\a-\x2\x2\x80"+
		"\x1C\x3\x2\x2\x2\x81\x82\a/\x2\x2\x82\x1E\x3\x2\x2\x2\x83\x84\a(\x2\x2"+
		"\x84 \x3\x2\x2\x2\x85\x86\a?\x2\x2\x86\x87\a?\x2\x2\x87\"\x3\x2\x2\x2"+
		"\x88\x89\a>\x2\x2\x89\x8A\a@\x2\x2\x8A$\x3\x2\x2\x2\x8B\x8C\a@\x2\x2\x8C"+
		"&\x3\x2\x2\x2\x8D\x8E\a>\x2\x2\x8E(\x3\x2\x2\x2\x8F\x90\a@\x2\x2\x90\x91"+
		"\a?\x2\x2\x91*\x3\x2\x2\x2\x92\x93\a>\x2\x2\x93\x94\a?\x2\x2\x94,\x3\x2"+
		"\x2\x2\x95\x96\a]\x2\x2\x96.\x3\x2\x2\x2\x97\x98\a_\x2\x2\x98\x30\x3\x2"+
		"\x2\x2\x99\x9A\a\x44\x2\x2\x9A\x9B\aG\x2\x2\x9B\x9C\aI\x2\x2\x9C\x9D\a"+
		"K\x2\x2\x9D\x9E\aP\x2\x2\x9E\x9F\a\"\x2\x2\x9F\xA0\a\x45\x2\x2\xA0\xA1"+
		"\aQ\x2\x2\xA1\xA2\a\x46\x2\x2\xA2\xA3\aG\x2\x2\xA3\x32\x3\x2\x2\x2\xA4"+
		"\xA5\aG\x2\x2\xA5\xA6\aP\x2\x2\xA6\xA7\a\x46\x2\x2\xA7\xA8\a\"\x2\x2\xA8"+
		"\xA9\a\x45\x2\x2\xA9\xAA\aQ\x2\x2\xAA\xAB\a\x46\x2\x2\xAB\xAC\aG\x2\x2"+
		"\xAC\x34\x3\x2\x2\x2\xAD\xAE\aK\x2\x2\xAE\xAF\aP\x2\x2\xAF\xB0\aV\x2\x2"+
		"\xB0\x36\x3\x2\x2\x2\xB1\xB2\aH\x2\x2\xB2\xB3\aN\x2\x2\xB3\xB4\aQ\x2\x2"+
		"\xB4\xB5\a\x43\x2\x2\xB5\xB6\aV\x2\x2\xB6\x38\x3\x2\x2\x2\xB7\xB8\a\x45"+
		"\x2\x2\xB8\xB9\aJ\x2\x2\xB9\xBA\a\x43\x2\x2\xBA\xBB\aT\x2\x2\xBB:\x3\x2"+
		"\x2\x2\xBC\xBD\a\x44\x2\x2\xBD\xBE\aQ\x2\x2\xBE\xBF\aQ\x2\x2\xBF\xC0\a"+
		"N\x2\x2\xC0<\x3\x2\x2\x2\xC1\xC3\t\x2\x2\x2\xC2\xC1\x3\x2\x2\x2\xC3\xC4"+
		"\x3\x2\x2\x2\xC4\xC2\x3\x2\x2\x2\xC4\xC5\x3\x2\x2\x2\xC5>\x3\x2\x2\x2"+
		"\xC6\xC8\t\x2\x2\x2\xC7\xC6\x3\x2\x2\x2\xC8\xC9\x3\x2\x2\x2\xC9\xC7\x3"+
		"\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\xCB\x3\x2\x2\x2\xCB\xCD\a\x30\x2\x2"+
		"\xCC\xCE\t\x2\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xCF\x3\x2\x2\x2\xCF\xCD\x3"+
		"\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0@\x3\x2\x2\x2\xD1\xD5\a$\x2\x2\xD2\xD4"+
		"\n\x3\x2\x2\xD3\xD2\x3\x2\x2\x2\xD4\xD7\x3\x2\x2\x2\xD5\xD3\x3\x2\x2\x2"+
		"\xD5\xD6\x3\x2\x2\x2\xD6\xD8\x3\x2\x2\x2\xD7\xD5\x3\x2\x2\x2\xD8\xE2\a"+
		"$\x2\x2\xD9\xDD\a)\x2\x2\xDA\xDC\n\x4\x2\x2\xDB\xDA\x3\x2\x2\x2\xDC\xDF"+
		"\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDD\xDE\x3\x2\x2\x2\xDE\xE0\x3\x2\x2"+
		"\x2\xDF\xDD\x3\x2\x2\x2\xE0\xE2\a)\x2\x2\xE1\xD1\x3\x2\x2\x2\xE1\xD9\x3"+
		"\x2\x2\x2\xE2\x42\x3\x2\x2\x2\xE3\xE4\a$\x2\x2\xE4\xE5\aV\x2\x2\xE5\xE6"+
		"\aT\x2\x2\xE6\xE7\aW\x2\x2\xE7\xE8\aG\x2\x2\xE8\xF1\a$\x2\x2\xE9\xEA\a"+
		"$\x2\x2\xEA\xEB\aH\x2\x2\xEB\xEC\a\x43\x2\x2\xEC\xED\aN\x2\x2\xED\xEE"+
		"\aU\x2\x2\xEE\xEF\aG\x2\x2\xEF\xF1\a$\x2\x2\xF0\xE3\x3\x2\x2\x2\xF0\xE9"+
		"\x3\x2\x2\x2\xF1\x44\x3\x2\x2\x2\xF2\xF3\a)\x2\x2\xF3\xF4\n\x5\x2\x2\xF4"+
		"\xF5\a)\x2\x2\xF5\x46\x3\x2\x2\x2\xF6\xFA\t\x6\x2\x2\xF7\xF9\t\a\x2\x2"+
		"\xF8\xF7\x3\x2\x2\x2\xF9\xFC\x3\x2\x2\x2\xFA\xF8\x3\x2\x2\x2\xFA\xFB\x3"+
		"\x2\x2\x2\xFBH\x3\x2\x2\x2\xFC\xFA\x3\x2\x2\x2\xFD\x101\a%\x2\x2\xFE\x100"+
		"\n\b\x2\x2\xFF\xFE\x3\x2\x2\x2\x100\x103\x3\x2\x2\x2\x101\xFF\x3\x2\x2"+
		"\x2\x101\x102\x3\x2\x2\x2\x102\x104\x3\x2\x2\x2\x103\x101\x3\x2\x2\x2"+
		"\x104\x105\b%\x2\x2\x105J\x3\x2\x2\x2\x106\x107\a\x41\x2\x2\x107L\x3\x2"+
		"\x2\x2\x108\x10A\t\t\x2\x2\x109\x108\x3\x2\x2\x2\x10A\x10D\x3\x2\x2\x2"+
		"\x10B\x109\x3\x2\x2\x2\x10B\x10C\x3\x2\x2\x2\x10C\x10F\x3\x2\x2\x2\x10D"+
		"\x10B\x3\x2\x2\x2\x10E\x110\t\n\x2\x2\x10F\x10E\x3\x2\x2\x2\x10F\x110"+
		"\x3\x2\x2\x2\x110\x111\x3\x2\x2\x2\x111\x112\t\v\x2\x2\x112N\x3\x2\x2"+
		"\x2\x113\x115\t\f\x2\x2\x114\x113\x3\x2\x2\x2\x115\x116\x3\x2\x2\x2\x116"+
		"\x114\x3\x2\x2\x2\x116\x117\x3\x2\x2\x2\x117\x118\x3\x2\x2\x2\x118\x119"+
		"\b(\x2\x2\x119P\x3\x2\x2\x2\x11A\x11B\a\x44\x2\x2\x11B\x11C\aG\x2\x2\x11C"+
		"\x11D\aI\x2\x2\x11D\x11E\aK\x2\x2\x11E\x11F\aP\x2\x2\x11F\x120\a\"\x2"+
		"\x2\x120\x121\aK\x2\x2\x121\x122\aH\x2\x2\x122R\x3\x2\x2\x2\x123\x124"+
		"\aG\x2\x2\x124\x125\aP\x2\x2\x125\x126\a\x46\x2\x2\x126\x127\a\"\x2\x2"+
		"\x127\x128\aK\x2\x2\x128\x129\aH\x2\x2\x129T\x3\x2\x2\x2\x12A\x12B\aY"+
		"\x2\x2\x12B\x12C\aJ\x2\x2\x12C\x12D\aK\x2\x2\x12D\x12E\aN\x2\x2\x12E\x12F"+
		"\aG\x2\x2\x12FV\x3\x2\x2\x2\x130\x131\a\x44\x2\x2\x131\x132\aG\x2\x2\x132"+
		"\x133\aI\x2\x2\x133\x134\aK\x2\x2\x134\x135\aP\x2\x2\x135\x136\a\"\x2"+
		"\x2\x136\x137\aY\x2\x2\x137\x138\aJ\x2\x2\x138\x139\aK\x2\x2\x139\x13A"+
		"\aN\x2\x2\x13A\x13B\aG\x2\x2\x13BX\x3\x2\x2\x2\x13C\x13D\aG\x2\x2\x13D"+
		"\x13E\aP\x2\x2\x13E\x13F\a\x46\x2\x2\x13F\x140\a\"\x2\x2\x140\x141\aY"+
		"\x2\x2\x141\x142\aJ\x2\x2\x142\x143\aK\x2\x2\x143\x144\aN\x2\x2\x144\x145"+
		"\aG\x2\x2\x145Z\x3\x2\x2\x2\x146\x147\a\x46\x2\x2\x147\x148\aK\x2\x2\x148"+
		"\x149\aU\x2\x2\x149\x14A\aR\x2\x2\x14A\x14B\aN\x2\x2\x14B\x14C\a\x43\x2"+
		"\x2\x14C\x14D\a[\x2\x2\x14D\x154\a<\x2\x2\x14E\x14F\aU\x2\x2\x14F\x150"+
		"\a\x45\x2\x2\x150\x151\a\x43\x2\x2\x151\x152\aP\x2\x2\x152\x154\a<\x2"+
		"\x2\x153\x146\x3\x2\x2\x2\x153\x14E\x3\x2\x2\x2\x154\\\x3\x2\x2\x2\x155"+
		"\x156\aU\x2\x2\x156\x157\a\x45\x2\x2\x157\x158\a\x43\x2\x2\x158\x159\a"+
		"P\x2\x2\x159\x15A\a<\x2\x2\x15A^\x3\x2\x2\x2\x15B\x15C\a\x43\x2\x2\x15C"+
		"\x15D\aP\x2\x2\x15D\x164\a\x46\x2\x2\x15E\x15F\aQ\x2\x2\x15F\x164\aT\x2"+
		"\x2\x160\x161\aP\x2\x2\x161\x162\aQ\x2\x2\x162\x164\aV\x2\x2\x163\x15B"+
		"\x3\x2\x2\x2\x163\x15E\x3\x2\x2\x2\x163\x160\x3\x2\x2\x2\x164`\x3\x2\x2"+
		"\x2\x11\x2\xC4\xC9\xCF\xD5\xDD\xE1\xF0\xFA\x101\x10B\x10F\x116\x153\x163"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace interpreter.Grammar
